// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4678.walle.subsystems;



import org.usfirst.frc4678.walle.Robot;
import org.usfirst.frc4678.walle.RobotMap;
import org.usfirst.frc4678.walle.commands.*;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Logger extends Subsystem {
	long startTime;
	
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
    	startTime = System.currentTimeMillis();
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }

    //You call this function to print out a debug statement
    public void debug (String className, String message) {
    	if (Robot.classLoggerEnabled().equals("any") || Robot.classLoggerEnabled().equals(className)) {
    		System.out.println("D: " + (System.currentTimeMillis() - startTime) + " : " + className + " : " + message);
    	}
    }
    
    //You call this function to print out a info print statement
    public void info (String className, String message) {
    	if (Robot.classLoggerEnabled().equals("any") || Robot.classLoggerEnabled().equals(className)) {
    		System.out.println("I: " + (System.currentTimeMillis() - startTime) + " : " + className + " : " + message);
    	}
    }
    
    //You call this function to print out a warning print statement
    public void warning (String className, String message) {
    	if (Robot.classLoggerEnabled().equals("any") || Robot.classLoggerEnabled().equals(className)) {
    		System.out.println("W: " + (System.currentTimeMillis() - startTime) + " : " + className + " : " + message);
    	}
    }
    
    //You call this function to print out a error print statement
    public void error (String className, String message) {
    	if (Robot.classLoggerEnabled().equals("any") || Robot.classLoggerEnabled().equals(className)) {
    		System.out.println("E: " + (System.currentTimeMillis() - startTime) + " : " + className + " : " + message);
    	}
    }
}

